@page "/users/{Username}"

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SocialPlatformBlazor.Client.Components
@using SocialPlatformBlazor.Shared.ViewModels.Posts
@using SocialPlatformBlazor.Shared.ViewModels.Users
@using SocialPlatformBlazor.Client.Services

@inject PostsService postsService

<div>
    @if (BasicUserInfo != null)
    {
        <PageTitle>
            @(BasicUserInfo.FirstName + " " + BasicUserInfo.LastName) Profile | SPB
        </PageTitle>
    }

    <h1>Hello, world!</h1>

    Welcome to your new app.

    <SurveyPrompt Title="How is Blazor working for you?" />
    @if (Posts != null)
    {
        @foreach (var post in Posts)
        {
            <PostInFeed Post="post" />
        }
    }

</div>
<InfiniteScrolling ItemsProvider="GetItems">
    <ItemTemplate Context="item">
        <PostInFeed Post="item" />
    </ItemTemplate>
    <LoadingTemplate>
        <div>Loading...</div>
    </LoadingTemplate>
</InfiniteScrolling>


@code {
    private int currentLastPost = 0;

    private int loadPostsCount = 10;

    private bool isAllCaughtUp = false;

    [Parameter]
    public string? Username { get; set; }

    public UserProfileModel BasicUserInfo { get; set; }

    private IEnumerable<PostInFeedViewModel>? Posts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Username != null)
        {
            Posts = await postsService.LoadUserPostsAsync(Username);
            currentLastPost += loadPostsCount;
        }

    }

    async Task<IEnumerable<PostInFeedViewModel>> GetItems(InfiniteScrollingItemsProviderRequest request)
    {
        if (Username == null)
        {
            return new List<PostInFeedViewModel>();
        }
        var posts = await postsService.LoadUserPostsAsync(Username, currentLastPost);
        if (posts != null)
        {
            currentLastPost += loadPostsCount;
            return posts;
        }
        return new List<PostInFeedViewModel>();

    }

}
